package ru.stepanov.database.entity.auto;

import java.time.LocalDateTime;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import ru.stepanov.database.entity.DbAddress;
import ru.stepanov.database.entity.DbAppointment;
import ru.stepanov.database.entity.DbChat;
import ru.stepanov.database.entity.DbComment;
import ru.stepanov.database.entity.DbCustomerSession;
import ru.stepanov.database.entity.DbFavorites;
import ru.stepanov.database.entity.DbMessage;

/**
 * Class _DbCustomer was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _DbCustomer extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "id";

    public static final Property<LocalDateTime> CREATED_DATE = Property.create("createdDate", LocalDateTime.class);
    public static final Property<LocalDateTime> DELETED_DATE = Property.create("deletedDate", LocalDateTime.class);
    public static final Property<String> EMAIL = Property.create("email", String.class);
    public static final Property<String> FIRST_NAME = Property.create("firstName", String.class);
    public static final Property<String> LAST_NAME = Property.create("lastName", String.class);
    public static final Property<LocalDateTime> MODIFIED_DATE = Property.create("modifiedDate", LocalDateTime.class);
    public static final Property<String> PASSWORD = Property.create("password", String.class);
    public static final Property<String> PHONE = Property.create("phone", String.class);
    public static final Property<String> SALT = Property.create("salt", String.class);
    public static final Property<DbAddress> CUSTOMER_TO_ADDRESS = Property.create("customerToAddress", DbAddress.class);
    public static final Property<List<DbAppointment>> CUSTOMER_TO_APPOINTMENT = Property.create("customerToAppointment", List.class);
    public static final Property<List<DbChat>> CUSTOMER_TO_CHAT = Property.create("customerToChat", List.class);
    public static final Property<List<DbComment>> CUSTOMER_TO_COMMENT = Property.create("customerToComment", List.class);
    public static final Property<List<DbFavorites>> CUSTOMER_TO_FAVORITES = Property.create("customerToFavorites", List.class);
    public static final Property<List<DbMessage>> CUSTOMER_TO_MESSAGE = Property.create("customerToMessage", List.class);
    public static final Property<List<DbCustomerSession>> CUSTOMER_TO_SESSION = Property.create("customerToSession", List.class);

    public void setCreatedDate(LocalDateTime createdDate) {
        writeProperty("createdDate", createdDate);
    }
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime)readProperty("createdDate");
    }

    public void setDeletedDate(LocalDateTime deletedDate) {
        writeProperty("deletedDate", deletedDate);
    }
    public LocalDateTime getDeletedDate() {
        return (LocalDateTime)readProperty("deletedDate");
    }

    public void setEmail(String email) {
        writeProperty("email", email);
    }
    public String getEmail() {
        return (String)readProperty("email");
    }

    public void setFirstName(String firstName) {
        writeProperty("firstName", firstName);
    }
    public String getFirstName() {
        return (String)readProperty("firstName");
    }

    public void setLastName(String lastName) {
        writeProperty("lastName", lastName);
    }
    public String getLastName() {
        return (String)readProperty("lastName");
    }

    public void setModifiedDate(LocalDateTime modifiedDate) {
        writeProperty("modifiedDate", modifiedDate);
    }
    public LocalDateTime getModifiedDate() {
        return (LocalDateTime)readProperty("modifiedDate");
    }

    public void setPassword(String password) {
        writeProperty("password", password);
    }
    public String getPassword() {
        return (String)readProperty("password");
    }

    public void setPhone(String phone) {
        writeProperty("phone", phone);
    }
    public String getPhone() {
        return (String)readProperty("phone");
    }

    public void setSalt(String salt) {
        writeProperty("salt", salt);
    }
    public String getSalt() {
        return (String)readProperty("salt");
    }

    public void setCustomerToAddress(DbAddress customerToAddress) {
        setToOneTarget("customerToAddress", customerToAddress, true);
    }

    public DbAddress getCustomerToAddress() {
        return (DbAddress)readProperty("customerToAddress");
    }


    public void addToCustomerToAppointment(DbAppointment obj) {
        addToManyTarget("customerToAppointment", obj, true);
    }
    public void removeFromCustomerToAppointment(DbAppointment obj) {
        removeToManyTarget("customerToAppointment", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DbAppointment> getCustomerToAppointment() {
        return (List<DbAppointment>)readProperty("customerToAppointment");
    }


    public void addToCustomerToChat(DbChat obj) {
        addToManyTarget("customerToChat", obj, true);
    }
    public void removeFromCustomerToChat(DbChat obj) {
        removeToManyTarget("customerToChat", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DbChat> getCustomerToChat() {
        return (List<DbChat>)readProperty("customerToChat");
    }


    public void addToCustomerToComment(DbComment obj) {
        addToManyTarget("customerToComment", obj, true);
    }
    public void removeFromCustomerToComment(DbComment obj) {
        removeToManyTarget("customerToComment", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DbComment> getCustomerToComment() {
        return (List<DbComment>)readProperty("customerToComment");
    }


    public void addToCustomerToFavorites(DbFavorites obj) {
        addToManyTarget("customerToFavorites", obj, true);
    }
    public void removeFromCustomerToFavorites(DbFavorites obj) {
        removeToManyTarget("customerToFavorites", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DbFavorites> getCustomerToFavorites() {
        return (List<DbFavorites>)readProperty("customerToFavorites");
    }


    public void addToCustomerToMessage(DbMessage obj) {
        addToManyTarget("customerToMessage", obj, true);
    }
    public void removeFromCustomerToMessage(DbMessage obj) {
        removeToManyTarget("customerToMessage", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DbMessage> getCustomerToMessage() {
        return (List<DbMessage>)readProperty("customerToMessage");
    }


    public void addToCustomerToSession(DbCustomerSession obj) {
        addToManyTarget("customerToSession", obj, true);
    }
    public void removeFromCustomerToSession(DbCustomerSession obj) {
        removeToManyTarget("customerToSession", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DbCustomerSession> getCustomerToSession() {
        return (List<DbCustomerSession>)readProperty("customerToSession");
    }


}
