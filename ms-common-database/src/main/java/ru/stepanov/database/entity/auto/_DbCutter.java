package ru.stepanov.database.entity.auto;

import java.time.LocalDateTime;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import ru.stepanov.database.entity.DbAddress;
import ru.stepanov.database.entity.DbAppointment;
import ru.stepanov.database.entity.DbChat;
import ru.stepanov.database.entity.DbComment;
import ru.stepanov.database.entity.DbCutterServices;
import ru.stepanov.database.entity.DbCutterSession;
import ru.stepanov.database.entity.DbFavorites;
import ru.stepanov.database.entity.DbMessage;

/**
 * Class _DbCutter was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _DbCutter extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "id";

    public static final Property<LocalDateTime> CREATED_DATE = Property.create("createdDate", LocalDateTime.class);
    public static final Property<LocalDateTime> DELETED_DATE = Property.create("deletedDate", LocalDateTime.class);
    public static final Property<String> EMAIL = Property.create("email", String.class);
    public static final Property<String> FIRST_NAME = Property.create("firstName", String.class);
    public static final Property<String> LAST_NAME = Property.create("lastName", String.class);
    public static final Property<LocalDateTime> MODIFIED_DATE = Property.create("modifiedDate", LocalDateTime.class);
    public static final Property<String> PASSWORD = Property.create("password", String.class);
    public static final Property<String> PHONE = Property.create("phone", String.class);
    public static final Property<String> SALT = Property.create("salt", String.class);
    public static final Property<DbAddress> CUTTER_TO_ADDRESS = Property.create("cutterToAddress", DbAddress.class);
    public static final Property<List<DbAppointment>> CUTTER_TO_APPOINTMENT = Property.create("cutterToAppointment", List.class);
    public static final Property<List<DbChat>> CUTTER_TO_CHAT = Property.create("cutterToChat", List.class);
    public static final Property<List<DbComment>> CUTTER_TO_COMMENT = Property.create("cutterToComment", List.class);
    public static final Property<List<DbCutterServices>> CUTTER_TO_CUTTER_SERVICES = Property.create("cutterToCutterServices", List.class);
    public static final Property<List<DbFavorites>> CUTTER_TO_FAVORITES = Property.create("cutterToFavorites", List.class);
    public static final Property<List<DbMessage>> CUTTER_TO_MESSAGE = Property.create("cutterToMessage", List.class);
    public static final Property<List<DbCutterSession>> CUTTER_TO_SESSION = Property.create("cutterToSession", List.class);

    public void setCreatedDate(LocalDateTime createdDate) {
        writeProperty("createdDate", createdDate);
    }
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime)readProperty("createdDate");
    }

    public void setDeletedDate(LocalDateTime deletedDate) {
        writeProperty("deletedDate", deletedDate);
    }
    public LocalDateTime getDeletedDate() {
        return (LocalDateTime)readProperty("deletedDate");
    }

    public void setEmail(String email) {
        writeProperty("email", email);
    }
    public String getEmail() {
        return (String)readProperty("email");
    }

    public void setFirstName(String firstName) {
        writeProperty("firstName", firstName);
    }
    public String getFirstName() {
        return (String)readProperty("firstName");
    }

    public void setLastName(String lastName) {
        writeProperty("lastName", lastName);
    }
    public String getLastName() {
        return (String)readProperty("lastName");
    }

    public void setModifiedDate(LocalDateTime modifiedDate) {
        writeProperty("modifiedDate", modifiedDate);
    }
    public LocalDateTime getModifiedDate() {
        return (LocalDateTime)readProperty("modifiedDate");
    }

    public void setPassword(String password) {
        writeProperty("password", password);
    }
    public String getPassword() {
        return (String)readProperty("password");
    }

    public void setPhone(String phone) {
        writeProperty("phone", phone);
    }
    public String getPhone() {
        return (String)readProperty("phone");
    }

    public void setSalt(String salt) {
        writeProperty("salt", salt);
    }
    public String getSalt() {
        return (String)readProperty("salt");
    }

    public void setCutterToAddress(DbAddress cutterToAddress) {
        setToOneTarget("cutterToAddress", cutterToAddress, true);
    }

    public DbAddress getCutterToAddress() {
        return (DbAddress)readProperty("cutterToAddress");
    }


    public void addToCutterToAppointment(DbAppointment obj) {
        addToManyTarget("cutterToAppointment", obj, true);
    }
    public void removeFromCutterToAppointment(DbAppointment obj) {
        removeToManyTarget("cutterToAppointment", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DbAppointment> getCutterToAppointment() {
        return (List<DbAppointment>)readProperty("cutterToAppointment");
    }


    public void addToCutterToChat(DbChat obj) {
        addToManyTarget("cutterToChat", obj, true);
    }
    public void removeFromCutterToChat(DbChat obj) {
        removeToManyTarget("cutterToChat", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DbChat> getCutterToChat() {
        return (List<DbChat>)readProperty("cutterToChat");
    }


    public void addToCutterToComment(DbComment obj) {
        addToManyTarget("cutterToComment", obj, true);
    }
    public void removeFromCutterToComment(DbComment obj) {
        removeToManyTarget("cutterToComment", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DbComment> getCutterToComment() {
        return (List<DbComment>)readProperty("cutterToComment");
    }


    public void addToCutterToCutterServices(DbCutterServices obj) {
        addToManyTarget("cutterToCutterServices", obj, true);
    }
    public void removeFromCutterToCutterServices(DbCutterServices obj) {
        removeToManyTarget("cutterToCutterServices", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DbCutterServices> getCutterToCutterServices() {
        return (List<DbCutterServices>)readProperty("cutterToCutterServices");
    }


    public void addToCutterToFavorites(DbFavorites obj) {
        addToManyTarget("cutterToFavorites", obj, true);
    }
    public void removeFromCutterToFavorites(DbFavorites obj) {
        removeToManyTarget("cutterToFavorites", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DbFavorites> getCutterToFavorites() {
        return (List<DbFavorites>)readProperty("cutterToFavorites");
    }


    public void addToCutterToMessage(DbMessage obj) {
        addToManyTarget("cutterToMessage", obj, true);
    }
    public void removeFromCutterToMessage(DbMessage obj) {
        removeToManyTarget("cutterToMessage", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DbMessage> getCutterToMessage() {
        return (List<DbMessage>)readProperty("cutterToMessage");
    }


    public void addToCutterToSession(DbCutterSession obj) {
        addToManyTarget("cutterToSession", obj, true);
    }
    public void removeFromCutterToSession(DbCutterSession obj) {
        removeToManyTarget("cutterToSession", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DbCutterSession> getCutterToSession() {
        return (List<DbCutterSession>)readProperty("cutterToSession");
    }


}
